/*
* fibonacci *

0, 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987

* linked list *

由一系列节组成，每个节点包含:
1 当前元素的值
2 指向下一个节点的指针

内存不连续，适合动态插入和删除。

** 单向链表

每个节点只指向下一个节点。

怎样反转单向链表: 使用三个指针prev, curr, next, 遍历链表，逐个反转next指针。

** 双向链表

每个节点有两个指针，一个指向下一个节点，一个指向上一个节点。

** 循环链表

每个节点的next指针指向下一个节点，最后一个节点的next指针指向头节点。

怎样判断链表是否有环: 快慢指针，若slow==fast，则有环。

* binary tree *

*/

package datastructure
